import telebot
from telebot import types
import requests
from bs4 import BeautifulSoup
from selenium import webdriver

class Bot:
    def __init__(self, token):
        self.bot = telebot.TeleBot(token)
        self.set_button()
        self.currencies = ['USD', 'EUR', 'GBP', 'JPY', 'CNY','KZT','UAH','AED']
        self.metal = ['–ó–æ–ª–æ—Ç–æ','–°–µ—Ä–µ–±—Ä–æ','–ü–ª–∞—Ç–∏–Ω–∞','–ü–∞–ª–ª–∞–¥–∏–π']
        self.stocks = ['AAPL','MSFT','AMZN']
        self.answer_info = ['–ê–∫—Ç—É–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞–ª—é—Ç—ã –±–µ—Ä–µ—Ç—Å—è —Å –æ—Ñ–∏—Ü–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞ –ë–∞–Ω–∫–∞ –†–æ—Å—Å–∏–∏:\nhttps://cbr.ru/currency_base/daily/', '–ê–∫—Ç—É–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ú–µ—Ç–∞–ª–ª–æ–≤ –±–µ—Ä–µ—Ç—Å—è —Å –æ—Ñ–∏—Ü–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞ –ë–∞–Ω–∫–∞ –†–æ—Å—Å–∏–∏:\nhttps://cbr.ru/hd_base/metall/metall_base_new/', '–ê–∫—Ç—É–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–∫—Ü–∏–π –±–µ—Ä–µ—Ç—Å—è —Å —Å–∞–π—Ç–∞ finnhub –∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏:\nhttps://finnhub.io/', '–í—Å–µ —Ä–µ–∞–ª–∏–∑—É–µ–º—ã–µ –∑–∞–ø—Ä–æ—Å—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –¥–≤—É–º—è –º–µ—Ç–æ–¥–∞–º–∏:\n –ü–µ—Ä–≤—ã–π –º–µ—Ç–æ–¥ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –∞–Ω–∞–ª–∏–∑ –≤–µ–± —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –¥–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –í–∞–ª—é—Ç—ã –∏ –ú–µ—Ç–∞–ª–ª–æ–≤(–ù—É–∂–Ω–æ –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–ø—Ä–æ—Å–∞).\n–í—Ç–æ—Ä–æ–π —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω —á–µ—Ä–µ–∑ –∑–∞–ø—Ä–æ—Å –∫ API –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏(–ü—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –±—ã—Å—Ç—Ä–µ–µ —á–µ–º –ø–µ—Ä–≤—ã–π). ']
        self.API_KEY = 'clf1ddpr01qovepph9dgclf1ddpr01qovepph9e0'
        # –ë–ª–æ–∫ –ö–ù–û–ü–û–ö
    def set_button(self):
        @self.bot.message_handler(commands=['start'])
        def start(message):
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
            item1 = types.KeyboardButton('üíπ–ö—É—Ä—Å –≤–∞–ª—é—Çüíπ')  # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
            item2 = types.KeyboardButton('üíé–ö—É—Ä—Å –º–µ—Ç–∞–ª–ª–æ–≤üíé')  # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
            item3 = types.KeyboardButton('üìà–¶–µ–Ω–∞ –∞–∫—Ü–∏–πüìà')  # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
            item4 = types.KeyboardButton('‚ùì–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è‚ùì')  # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
            markup.row(item4)
            markup.row(item1, item2, item3)
            self.bot.send_message(message.chat.id,'–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é',reply_markup=markup)


        # –ë–õ–û–ö –õ–û–ì–ò–ö–ò
        @self.bot.message_handler(content_types=['text'])
        def handle_text(message):
            if message.text == 'üíπ–ö—É—Ä—Å –≤–∞–ª—é—Çüíπ':
                self.show_currency_menu(message)

            elif message.text == 'üíé–ö—É—Ä—Å –º–µ—Ç–∞–ª–ª–æ–≤üíé':
                self.show_metal_menu(message)

            elif message.text == 'üìà–¶–µ–Ω–∞ –∞–∫—Ü–∏–πüìà':
                self.show_stock_menu(message)

            elif message.text == '‚ùì–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è‚ùì':
                self.show_info(message)

            elif message.text == '–ü—É–Ω–∫—Ç 1':
                self.bot.send_message(message.chat.id, self.answer_info[0])

            elif message.text == '–ü—É–Ω–∫—Ç 2':
                self.bot.send_message(message.chat.id, self.answer_info[1])

            elif message.text == '–ü—É–Ω–∫—Ç 3':
                self.bot.send_message(message.chat.id, self.answer_info[2])

            elif message.text == '–ü—É–Ω–∫—Ç 4':
                self.bot.send_message(message.chat.id, self.answer_info[3])

            elif message.text in self.currencies:
                self.show_value_info(message, message.text)
                self.get_currency_info(message)


            elif message.text in self.metal:
                self.show_metal_info(message, message.text)
                self.get_metal_info(message)

            elif message.text in self.stocks:
                self.show_stock_info(message, message.text)
                self.get_stock_info(message)

            elif message.text == '–ú–µ–Ω—é':
                start(message)

    # –ë–õ–û–ö –í–ê–õ–Æ–¢–´
    def show_currency_menu(self, message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        item1 = types.KeyboardButton('–ú–µ–Ω—é')  # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
        markup.add(item1)
        currency = ['USD', 'EUR', 'GBP', 'JPY', 'CNY','KZT','UAH','AED']
        markup.add(currency[0], currency[1])
        markup.add(currency[2], currency[3])
        markup.add(currency[4], currency[5])
        markup.add(currency[6], currency[7])
        self.bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É:', reply_markup=markup)

    def show_value_info(self, message, currency):
        self.selected_currency = currency
        self.bot.send_message(message.chat.id, f'–í—ã–±—Ä–∞–Ω–Ω–∞—è –≤–∞–ª—é—Ç–∞: {currency}')

    def get_currency_info(self, message):
        driver = webdriver.Chrome()
        driver.get('https://cbr.ru/eng/currency_base/daily/')
        html = driver.page_source
        soup = BeautifulSoup(html, 'html.parser')

        table = soup.find('table', {'class': 'data'})
        rows = table.find_all('tr')

        for row in rows:
            cols = row.find_all('td')
            cols = [col.text.strip() for col in cols]
            if cols:
                    if cols[1] == self.selected_currency:
                        self.bot.send_message(message.chat.id, f'{cols[1]} = {cols[4]}, –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ —Ä—É–±–ª—é')
        driver.close()


    #–ë–õ–û–ö –ú–ï–¢–ê–õ–õ–û–í
    def show_metal_menu(self, message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        item1 = types.KeyboardButton('–ú–µ–Ω—é')  # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
        markup.add(item1)
        markup.add (self.metal[0], self.metal[1])
        markup.add(self.metal[2], self.metal[3])
        self.bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–∞–ª–ª:', reply_markup=markup)

    def show_metal_info(self, message, metal):
        self.selected_metal = metal
        self.bot.send_message(message.chat.id, f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Ç–∞–ª–ª–µ: {metal}')

    def get_metal_info(self, message):
        driver = webdriver.Chrome()
        driver.get('https://cbr.ru/eng/hd_base/metall/metall_base_new/#highlight=metals')
        html = driver.page_source
        soup = BeautifulSoup(html, 'html.parser')

        table = soup.find('table', {'class': 'data'})
        rows = table.find_all('tr')
        ic(rows)
        for row in rows:
            value = row.find_all('td')
            value = [val.text.strip() for val in value if val.text.strip()]
            if len(value) == 0:
                continue
            self.bot.send_message(message.chat.id, f'{self.selected_metal} = {value[self.metal.index(self.selected_metal) + 1]} –†—É–±–ª–µ–π –∑–∞ –≥—Ä–∞–º–º')
            break
        driver.quit()

    #–ë–õ–û–ö –ê–ö–¶–ò–ô
    def show_stock_menu(self, message):

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('–ú–µ–Ω—é')  # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
        markup.add(item1)
        for metal in self.stocks:
            markup.add(types.KeyboardButton(metal))
        self.bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∞–∫—Ü–∏—é:', reply_markup=markup)

    def show_stock_info(self, message, stock):
        self.selected_stock = stock
        self.bot.send_message(message.chat.id, f'–í—ã–±—Ä–∞–Ω–Ω–∞—è –∞–∫—Ü–∏—è: {stock}')

    def get_stock_info(self, message):
        url = f'https://finnhub.io/api/v1/quote?symbol={self.selected_stock}&token={self.API_KEY}'
        response = requests.get(url)
        if response.status_code == 200:
            data = response.json()
            self.bot.send_message(message.chat.id, f'–¶–µ–Ω–∞ –∞–∫—Ü–∏–∏: {data["c"]}')
            return data['c']
        else:
            self.bot.send_message(message.chat.id, f'–û—à–∏–±–∫–∞: {response.status_code}')



    # –ë–õ–û–ö –ò–ù–§–û–†–ú–ê–¶–ò–ò
    def show_info(self, message):

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        items = [types.KeyboardButton('–ú–µ–Ω—é'), types.KeyboardButton('–ü—É–Ω–∫—Ç 1'), types.KeyboardButton('–ü—É–Ω–∫—Ç 2'),
                 types.KeyboardButton('–ü—É–Ω–∫—Ç 3'), types.KeyboardButton('–ü—É–Ω–∫—Ç 4')]
        messages = ['–Ø —Ä–∞—Å—Å–∫–∞–∂—É –≤–∞–º –æ —Å–≤–æ–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ', '1-–µ. –Ø –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã',
                    '2-–µ. –Ø –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –º–µ—Ç–∞–ª–ª–æ–≤', '3-–µ. –Ø –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –∞–∫—Ü–∏–π',
                    '4-–µ. –Ø –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é']
        actions = ['typing', 'typing', 'typing', 'typing', 'typing']

        markup.row(items[0])
        markup.row(items[1], items[2])
        markup.row(items[3], items[4])

        for i in range(len(messages)):
            self.bot.send_message(message.chat.id, messages[i])
            self.bot.send_chat_action(message.chat.id, actions[i])

        self.bot.send_message(message.chat.id,
                              '–ï—Å–ª–∏ –≤–∞—Å –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª –∫–∞–∫–æ–π-—Ç–æ –ø—É–Ω–∫—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ —Ü–∏—Ñ—Ä—É –≤ —á–∞—Ç –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –µ–µ –≤ –º–µ–Ω—é',
                              reply_markup=markup)


    def run(self):

        self.bot.polling()


bot = Bot('6733330904:AAHCIv4ER8E769rU8VqKyi6qHACyFCHGmGM')
bot.run()
